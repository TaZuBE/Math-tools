import{f as h,_ as v,o as C,c as m,i as A,v as f,b as l,t as p,j as x,p as g,a as b}from"./index-aJeGQCA6.js";const N=h({name:"random",data(){return{expression:"",result:""}},mounted(){},methods:{computeResult(){let F=this.computing(this.expression.replace(/\s/g,""));typeof F=="number"&&(F=Number(F.toFixed(6)).toString()),this.result=F},computing(F){function i(u){(u==="("||u==="[")&&s++,(u===")"||u==="]")&&s--}function n(u,t){return u==="Error"||t==="Error"?"Error":u+t}function o(u,t){return u==="Error"||t==="Error"?"Error":u-t}function B(u,t){return u==="Error"||t==="Error"?"Error":u*t}function D(u,t){return u==="Error"||t==="Error"?"Error":u/t}function c(u,t){return u==="Error"||t==="Error"?"Error":u%t}for(;F[0]==="("&&F[F.length-1]===")";)F=F.substring(1,F.length-1);let s=0,e,E=0;for(let u=F.length;u>=0;u--)if(i(F[u]),s===0){if(F[u]==="+"){e=n,E=u;break}if(F[u]==="-"){e=o,E=u;break}F[u]==="*"&&(e=B,E=u),F[u]==="/"&&(e=D,E=u),F[u]==="%"&&(e=c,E=u)}if(e)return e(this.computing(F.substring(0,E)),this.computing(F.substring(E+1)));if(F.match(/^\[-?\d(\.\d+)?~-?\d(\.\d+)?\]$/)){const u=F.match(/-?\d(\.\d+)?/g);let t=[];for(let a=0;a<=u.length;a++)t[a]=Number(u[a]);return!Number.isInteger(t[0])||!Number.isInteger(t[1])||t[0]>t[1]?"Error":t[0]+Math.floor((t[1]-t[0]+1)*Math.random())}if(F.match(/^\[-?\d(\.\d+)?~-?\d(\.\d+)?\](except|besides)((-?\d(\.\d+)?)|(\[(((-?\d(\.\d+)?,)*-?\d(\.\d+)?,?)|(-?\d(\.\d+)?~-?\d(\.\d+)?))\]))$/)){const u=F.match(/\[.+\]/)[0].match(/-?\d(\.\d+)?/g),t=F.match(/(except|besides).+$/)[0].match(/-?\d(\.\d+)?/g);let a=[],r=[];if(!Number.isInteger(Number(u[0]))||!Number.isInteger(Number(u[1]))||Number(u[0])>Number(u[1]))return"Error";for(let d=Number(u[0]);d<=Number(u[1]);d++)a.push(d);if(F.match(/(except|besides).+$/)[0].includes("~")){if(!Number.isInteger(Number(t[0]))||!Number.isInteger(Number(t[1]))||Number(t[0])>Number(t[1]))return"Error";for(let d=Number(t[0]);d<=Number(t[1]);d++)r.push(d)}else for(let d=0;d<t.length;d++)r[d]=Number(t[d]);if(F.includes("except"))a=a.filter(d=>!r.includes(d));else for(let d=0;d<r.length;d++)a.includes(r[d])||a.push(r[d]);return a[Math.floor(Math.random()*a.length)]}if(F.match(/^\[(-?\d(\.\d+)?,)*-?\d(\.\d+)?,?\]$/)){const u=F.match(/-?\d(\.\d+)?/g);let t=[];for(let a=0;a<u.length;a++)t[a]=Number(u[a]);return t[Math.floor(Math.random()*t.length)]}if(F.match(/^floor\(.+\)$/)){const u=this.computing(F.substring(6,F.length-1));return typeof u=="number"?Math.floor(u):u}if(F.match(/^ceil\(.+\)$/)){const u=this.computing(F.substring(5,F.length-1));return typeof u=="number"?Math.ceil(u):u}if(F.match(/^round\(.+\)$/)){const u=this.computing(F.substring(6,F.length-1));return typeof u=="number"?Math.round(u):u}return F.match(/^random\(\)$/)?Math.random():F.match(/^-?\d(\.\d+)?(\.\d+)?$/)?Number(F.match(/^\d+(\.\d+)?$/)[0]):"Error"}}}),$=F=>(g("data-v-d9c07233"),F=F(),b(),F),_={class:"base"},M=$(()=>l("h1",{class:"first-title"},"随机数生成器",-1)),I={class:"output"},S={class:"result"},k=x('<div class="tips" data-v-d9c07233><div class="tip" data-v-d9c07233><h1 class="title" data-v-d9c07233>表达式 · 取随机数 · <h1 class="title strong" data-v-d9c07233>范围</h1></h1><ul data-v-d9c07233><li data-v-d9c07233>如果要表示一个范围中取随机整数，可以使用 [min~max] 的表达式。这个表达式返回整数min到max中所有整数的集合中随机的一个。</li><li data-v-d9c07233>例如：[0~20] 返回了0至1之间所有整数中随机的数，比如 7, 13, 20, 1 诸如此类。</li><li class="strong" data-v-d9c07233>注意:    min≤max    min&amp;max都是整数</li></ul></div><hr data-v-d9c07233><div class="tip" data-v-d9c07233><h1 class="title" data-v-d9c07233>表达式 · 取随机数 · <h1 class="title strong" data-v-d9c07233>关键词 except &amp; besides</h1></h1><ul data-v-d9c07233><li data-v-d9c07233>如果想在一个指定整数范围除去一个或多个数，并且让他们每个数随机的概率相等，可以使用except关键词，反之可以使用besides关键词。</li><li data-v-d9c07233>例如：想要得到0~20中所有整数除去10中的随机数，可以写 [0~20] except 10；想要得到0~20中所有整数除去10和11中的随机数，可以写 [0~20] except [10, 11]；想要得到0~20中所有整数除去8到11后的随机数，可以写 [0~20] except [8~11]</li><li class="strong" data-v-d9c07233>注意:    只可应用于[min~max]形式后</li></ul></div><hr data-v-d9c07233><div class="tip" data-v-d9c07233><h1 class="title" data-v-d9c07233>表达式 · 取随机数 · <h1 class="title strong" data-v-d9c07233>数组</h1></h1><ul data-v-d9c07233><li data-v-d9c07233>如果要取得随机数是某些指定中的一个，那么就可以使用数组实现。例如 [4.8, 9.2, 2] 返回这三个数中随机一个。</li><li class="strong" data-v-d9c07233>注意:    元素（每个数字）之间要用逗号隔开</li></ul></div><hr data-v-d9c07233><div class="tip" data-v-d9c07233><h1 class="title" data-v-d9c07233>表达式 · 修饰结果 · <h1 class="title strong" data-v-d9c07233>计算</h1></h1><ul data-v-d9c07233><li data-v-d9c07233>如果想对取得的随机数进行进一步的操作，例如利用 [0~10] 获得0~20所有偶数中随机一个，那就得手动计算了。这里支持 + - * / % 运算符和 floor ceil round 函数，使用函数时，是&quot;函数名(参数)&quot;的格式，如果没有参数或有多个参数，括号也不能省去。</li><li class="strong" data-v-d9c07233>注意:    计算机无法精确的存储小数，尽量避免使用小数</li></ul></div><hr data-v-d9c07233><div class="tip" data-v-d9c07233><h1 class="title" data-v-d9c07233>表达式 · 修饰结果 · <h1 class="title strong" data-v-d9c07233>运算符 %</h1></h1><ul data-v-d9c07233><li data-v-d9c07233>%运算符是计算余数的。</li><li data-v-d9c07233>例如：3%2的值就是3÷2的余数。无论被除数和除数都是什么数，商一定是整数，这对于%的计算结果很重要。</li></ul></div><hr data-v-d9c07233><div class="tip" data-v-d9c07233><h1 class="title" data-v-d9c07233>表达式 · 修饰结果 · <h1 class="title strong" data-v-d9c07233>函数 floor</h1></h1><ul data-v-d9c07233><li data-v-d9c07233>floor函数是对于一个实数返回小于等于它最大的整数的函数，也可以说是返回省略小数部分的整数。</li><li data-v-d9c07233>例如：floor(8.2)返回8，省略了小数部分0.2；floor(-3.2)返回-4，因为-4是-3.2小于而且最大的整数。</li></ul></div><hr data-v-d9c07233><div class="tip" data-v-d9c07233><h1 class="title" data-v-d9c07233>表达式 · 修饰结果 · <h1 class="title strong" data-v-d9c07233>函数 ceil</h1></h1><ul data-v-d9c07233><li data-v-d9c07233>ceil函数是对于一个实数返回大于等于它最小的整数的函数，也可以说是返回省略小数部分并且加一的整数。</li><li data-v-d9c07233>例如：ceil(8.2)返回9，省略了小数部分0.2并且+1；ceil(-3.2)返回-3，因为-3是-3.2大于而且最小的整数。</li></ul></div><hr data-v-d9c07233><div class="tip" data-v-d9c07233><h1 class="title" data-v-d9c07233>表达式 · 修饰结果 · <h1 class="title strong" data-v-d9c07233>函数 round</h1></h1><ul data-v-d9c07233><li data-v-d9c07233>round函数是对于一个实数返回它四舍五入后的整数。</li><li data-v-d9c07233>例如：round(8.2)返回8；round(-3.2)返回-3。</li></ul></div><hr data-v-d9c07233><div class="tip" data-v-d9c07233><h1 class="title" data-v-d9c07233>表达式 · 更多函数 · <h1 class="title strong" data-v-d9c07233>random函数</h1></h1><ul data-v-d9c07233><li data-v-d9c07233>如果你喜欢，你可以使用random函数来获取你想要的随机数。random函数不需要参数，它会返回0~1间一个随机的数（包括0，不包括1）。</li><li data-v-d9c07233> random() = 0.348274<br data-v-d9c07233> random() = 0.6100862<br data-v-d9c07233> random() = 0.114514<br data-v-d9c07233> random() = 0.4131025<br data-v-d9c07233></li><li class="strong" data-v-d9c07233>注意:    不返回1</li></ul></div><div class="nothing" data-v-d9c07233></div></div>',1);function y(F,i,n,o,B,D){return C(),m("div",_,[M,A(l("input",{class:"expression","onUpdate:modelValue":i[0]||(i[0]=c=>F.expression=c),placeholder:"请输入表达式"},null,512),[[f,F.expression]]),l("div",I,[l("div",S,p(F.result),1),l("button",{class:"to-result",onClick:i[1]||(i[1]=(...c)=>F.computeResult&&F.computeResult(...c))},"点击生成")]),k])}const w=v(N,[["render",y],["__scopeId","data-v-d9c07233"]]);export{w as default};
