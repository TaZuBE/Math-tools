var n=Object.defineProperty;var r=(e,t,s)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s;var i=(e,t,s)=>(r(e,typeof t!="symbol"?t+"":t,s),s);import{f as c,m as a,q as l,o as x,c as d,b as p,_ as w}from"./index-H30AAqQq.js";class o{constructor(t,s){i(this,"x",0);i(this,"y",0);t=t||0,s=s||0,this.x=t,this.y=s}distanceToOrigin(){return Math.sqrt(this.x*this.x+this.y*this.y)}add(t){return new o(this.x+t.x,this.y+t.y)}sub(t){return new o(this.x-t.x,this.y-t.y)}mult(t){return new o(this.x*t,this.y*t)}}let u=class{constructor(t,s){i(this,"ctx");i(this,"iter");i(this,"pos");i(this,"endPointsRadius");i(this,"controlPointsRadius");i(this,"endPointsColor");i(this,"controlPointsColor");i(this,"lineWidth");i(this,"lineColor");this.ctx=t?t.getContext("2d"):null,this.iter=300,s||(s=[new o(50,50),new o(100,100)]),this.pos=Array.from(s),this.endPointsRadius=3.5,this.controlPointsRadius=2.5,this.endPointsColor="#000",this.controlPointsColor="#000",this.lineColor="#000",this.lineWidth=2}iterPos(t){let s=Array.from(this.pos);if(s.length<2)throw new Error("Not enough points");for(;s.length>1;){for(let h=0;h<s.length-1;h++)s[h]=s[h+1].sub(s[h]).mult(t).add(s[h]);s.pop()}return s[0]}draw(){this.drawLines(),this.drawEndPoints(),this.drawControlPoints()}drawLines(){if(!this.ctx||this.pos.length<2)throw new Error("No canvas context");this.ctx.beginPath(),this.ctx.moveTo(this.pos[0].x,this.pos[0].y),this.ctx.lineWidth=this.lineWidth;for(let t=1;t<=this.iter;t++){const s=this.iterPos(t/this.iter);this.ctx.lineTo(s.x,s.y)}this.ctx.stroke(),this.ctx.closePath()}drawEndPoints(){if(!this.ctx)throw new Error("No canvas context");this.ctx.beginPath(),this.ctx.moveTo(this.pos[0].x,this.pos[0].y),this.ctx.arc(this.pos[0].x,this.pos[0].y,this.endPointsRadius,0,2*Math.PI),this.ctx.fill(),this.ctx.moveTo(this.pos[this.pos.length-1].x,this.pos[this.pos.length-1].y),this.ctx.arc(this.pos[this.pos.length-1].x,this.pos[this.pos.length-1].y,this.endPointsRadius,0,2*Math.PI),this.ctx.fill(),this.ctx.closePath()}drawControlPoints(){if(!this.ctx)throw new Error("No canvas context");this.ctx.beginPath();for(let t=1;t<this.pos.length-1;t++)this.ctx.moveTo(this.pos[t].x,this.pos[t].y),this.ctx.arc(this.pos[t].x,this.pos[t].y,this.controlPointsRadius,0,2*Math.PI),this.ctx.fill();this.ctx.closePath()}};const P={class:"view"},f=c({__name:"bezier",setup(e){const t=a(null),s=new u;return l(()=>{s.ctx=t.value.getContext("2d"),s.pos=[new o(100,100),new o(400,100),new o(100,400),new o(400,400)],s.draw()}),(h,g)=>(x(),d("div",P,[p("canvas",{ref_key:"canvas",ref:t,width:"500",height:"500"},null,512)]))}}),v=w(f,[["__scopeId","data-v-6707bb06"]]);export{v as default};
